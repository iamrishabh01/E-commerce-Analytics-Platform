-- Create materialized views for common queries
CREATE MATERIALIZED VIEW retail.mv_daily_sales
WITH (DISTRIBUTION = HASH(date_key)) AS
SELECT
    d.full_date,
    d.month_name,
    d.quarter,
    d.year,
    p.category_name,
    p.brand,
    g.country,
    SUM(f.sales_amount) AS total_sales,
    SUM(f.quantity) AS total_quantity,
    COUNT_BIG(*) AS record_count
FROM retail.fact_sales f
JOIN retail.dim_date d ON f.date_key = d.date_key
JOIN retail.dim_products p ON f.product_key = p.product_key
JOIN retail.dim_geography g ON f.geography_key = g.geography_key
GROUP BY 
    d.full_date, d.month_name, d.quarter, d.year,
    p.category_name, p.brand, g.country;

CREATE MATERIALIZED VIEW retail.mv_customer_segment_performance
WITH (DISTRIBUTION = REPLICATE) AS
SELECT
    c.customer_segment,
    d.year,
    d.quarter,
    p.price_range,
    COUNT(DISTINCT f.customer_key) AS customer_count,
    SUM(f.sales_amount) AS total_revenue,
    AVG(f.sales_amount) AS avg_order_value
FROM retail.fact_sales f
JOIN retail.dim_customers c ON f.customer_key = c.customer_key
JOIN retail.dim_date d ON f.date_key = d.date_key
JOIN retail.dim_products p ON f.product_key = p.product_key
GROUP BY 
    c.customer_segment, d.year, d.quarter, p.price_range;